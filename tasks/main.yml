---
- name: Install Nextcloud
  become: true
  tags: install
  block:

    - name: Add nextcloud group
      ansible.builtin.group:
        name: nextcloud
        state: present

    - name: Add Ansible user to nextcloud
      ansible.builtin.user:
        name: "{{ user }}"
        groups: nextcloud
        append: true

    - name: Add nextcloud user
      ansible.builtin.user:
        name: nextcloud
        group: nextcloud

    - name: Create nextcloud config directory
      ansible.builtin.file:
        path: /home/nextcloud/config
        state: directory
        mode: 0775
        owner: nextcloud
        group: nextcloud

    - name: Create nextcloud data directory
      ansible.builtin.file:
        path: /home/nextcloud/data
        state: directory
        mode: 0775
        owner: nextcloud
        group: nextcloud

    - name: Create mariadb data directory
      ansible.builtin.file:
        path: /home/nextcloud/mariadb
        state: directory
        mode: 0775
        owner: nextcloud
        group: nextcloud

    - name: Create duplicati config directory
      ansible.builtin.file:
        path: /home/nextcloud/duplicati
        state: directory
        mode: 0775
        owner: nextcloud
        group: nextcloud

    - name: Instantiate passwd database
      getent:
        database: passwd

    - name: Create nextcloud_net network
      community.docker.docker_network:
        name: nextcloud_net

    - name: Create Mariadb container
      community.docker.docker_container:
        name: mariadb
        image: lscr.io/linuxserver/mariadb:latest
        networks:
          - name: nextcloud_net
        pull: true
        restart_policy: unless-stopped
        volumes:
          - /home/nextcloud/mariadb:/config
        env:
          TZ: Asia/Bangkok
          PUID: "{{ getent_passwd['nextcloud'].1 }}"
          PGID: "{{ getent_passwd['nextcloud'].2 }}"
          MYSQL_ROOT_PASSWORD: "mariadbpassword"
          MYSQL_DATABASE: "nextcloud"
          MYSQL_USER: "ncuser"
          MYSQL_PASSWORD: "ncpassword"

    - name: Create Nextcloud container
      community.docker.docker_container:
        name: nextcloud
        image: lscr.io/linuxserver/nextcloud:latest
        networks:
          - name: nextcloud_net
        pull: true
        restart_policy: unless-stopped
        volumes:
          - /home/nextcloud/config:/config
          - /home/nextcloud/data:/data
        ports:
          - 443:443
        env:
          TZ: Asia/Bangkok
          PUID: "{{ getent_passwd['nextcloud'].1 }}"
          PGID: "{{ getent_passwd['nextcloud'].2 }}"

    - name: Create Duplicati container
      community.docker.docker_container:
        name: duplicati
        image: lscr.io/linuxserver/duplicati:latest
        pull: true
        restart_policy: unless-stopped
        volumes:
          - /home/nextcloud/duplicati:/config
          - /home/nextcloud:/source
        ports:
          - 8200:8200
        env:
          TZ: Asia/Bangkok
          PUID: "{{ getent_passwd['nextcloud'].1 }}"
          PGID: "{{ getent_passwd['nextcloud'].2 }}"

    - name: Allow HTTPS connections
      community.general.ufw:
        rule: allow
        proto: tcp
        port: '443'
      notify: reload ufw

    - name: Allow duplicati connections
      community.general.ufw:
        rule: allow
        proto: tcp
        port: '8200'
      notify: reload ufw

    - name: Setup cron job to stop nextcloud for backup
      ansible.builtin.cron:
        name: "Pause nextcloud for backup"
        hour: "3"
        minute: "0"
        job: "sudo docker stop nextcloud"

    - name: Setup cron job to stop mariadb for backup
      ansible.builtin.cron:
        name: "Pause mariadb for backup"
        hour: "3"
        minute: "1"
        job: "sudo docker stop mariadb"

    - name: Setup cron job to start mariadb after backup
      ansible.builtin.cron:
        name: "Resume mariadb after backup"
        hour: "4"
        minute: "0"
        job: "sudo docker start mariadb"

    - name: Setup cron job to start nextcloud after backup
      ansible.builtin.cron:
        name: "Resume nextcloud after backup"
        hour: "4"
        minute: "0"
        job: "sudo docker start nextcloud"
